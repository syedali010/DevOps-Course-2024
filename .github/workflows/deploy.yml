name: CI/CD for Services

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up kubeconfig and test connection
    - name: Set up Kubeconfig
      run: |
        echo "Setting up kubeconfig..."
        echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
        export KUBECONFIG=$(pwd)/kubeconfig
        echo "Kubeconfig setup completed."

        # Debug kubeconfig details
        echo "### Displaying kubeconfig ###"
        kubectl config view

        # Debug Kubernetes cluster info
        echo "### Testing Kubernetes Cluster Connection ###"
        kubectl cluster-info || true  # Do not fail if cluster-info fails
        echo "Cluster-info executed."

    # Step 3: Debug Kubernetes connectivity
    - name: Debug Kubernetes Connectivity
      run: |
        echo "### Debugging Kubernetes Connectivity ###"

        echo "### Checking Kubernetes Nodes ###"
        kubectl get nodes || true  # Allow failure for debugging

        echo "### Dumping Kubernetes Cluster Info ###"
        kubectl cluster-info dump || true

        echo "### Testing API Server Connection ###"
        curl -k https://kubernetes.docker.internal:6443 || true  # Allow failure for debugging

    # Step 4: Apply Kubernetes manifests
    - name: Deploy to Kubernetes
      run: |
        echo "### Applying Kubernetes Manifests ###"
        kubectl apply -f ./k8s/service-a-deployment.yaml --validate=false || true
        kubectl apply -f ./k8s/service-a-service.yaml --validate=false || true
        kubectl apply -f ./k8s/service-b-deployment.yaml --validate=false || true
        kubectl apply -f ./k8s/service-b-service.yaml --validate=false || true
